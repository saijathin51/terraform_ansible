name: Configure

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  create_ec2_using_terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.5
          terraform_wrapper: false

      - name: Initialize and Apply Terraform
        run: |
          terraform init
          terraform apply -auto-approve -var "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" -var "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" -var "AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION"
          public_ip=$(terraform output -raw instance_ip)
          echo "$public_ip" > public_ip.txt
          cat public_ip.txt
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}


      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ip-artifact
          path: public_ip.txt

  ansible_deployment:
    runs-on: ubuntu-latest
    needs: create_ec2_using_terraform

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: ip-artifact

      - name: Configure Ansible Inventory
        run: |
          sudo apt update
          sudo apt install -y python3-pip
          sudo pip3 install ansible
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/private_key.pem
          chmod 400 ~/.ssh/private_key.pem
          echo "[web]" > inventory.ini
          cat public_ip.txt | xargs -I {} echo "{} ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/private_key.pem" >> inventory.ini
          mv inventory.ini $HOME
          cat $HOME/inventory.ini
          ssh-keyscan -H $(cat public_ip.txt) >> ~/.ssh/known_hosts


      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i $HOME/inventory.ini deploy_nginx.yml -vvv
          # retries=3
          # count=0
          # until [ $count -ge $retries ]
          # do
          #   ansible-playbook -i $HOME/inventory.ini deploy_nginx.yml -vvv && break
          #   count=$((count+1))
          #   echo "Attempt $count of $retries failed. Retrying..."
          #   sleep 10
          # done
        

      - name: Append Port to Public IPs
        run: |
          cat public_ip.txt | xargs -I {} echo "{}:8080" > modified_public_ip.txt
          cat modified_public_ip.txt



      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.5
          terraform_wrapper: false

      - name: Check Terraform Installation
        run: |
          which terraform
          terraform version
              
      - name: Run Terraform Destroy after sleeping minutes
        run: |
          # sleep 60  # Sleep for 60 * 3 min = 180 seconds
          pwd
          ls -R
          terraform init
          terraform destroy -auto-approve -var "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" -var "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" -var "AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION"          env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
